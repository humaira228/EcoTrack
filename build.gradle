plugins {
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id 'io.freefair.lombok' version '8.4' // Add Lombok for easier development
}

group = 'com.ecotrack'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-cache' // Added for caching
    implementation 'org.springframework.boot:spring-boot-starter-actuator' // For monitoring

    // Database
    implementation 'org.postgresql:postgresql:42.7.2'
    implementation 'org.hibernate:hibernate-spatial:6.4.4.Final'

    // Caching
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8' // Added for Caffeine cache

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // API Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // Geospatial
    implementation 'org.locationtech.jts:jts-core:1.19.0'

    // Utilities
    compileOnly 'org.projectlombok:lombok' // Added for Lombok
    annotationProcessor 'org.projectlombok:lombok'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2' // For testing with in-memory database
}

// Add this configuration for better build performance
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs += ['-parameters']
}

// Configure JVM tests
test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

// Create a task to display dependency updates
task dependencyUpdates(type: DependencyReportTask) {}